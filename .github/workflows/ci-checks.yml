name: ci-checks

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
    clean:
        runs-on: [self-hosted, ubuntu, ibm]
        name: "Cleaning the workspace before the run"
        steps:
        - name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.TEST_DOCKER_USERNAME }}
            password: ${{ secrets.TEST_DOCKER_PASSWORD }}                
        - name: Clean WORKSPACE
          uses: AutoModality/action-clean@v1
        - name: Clean docker
          run: "docker system prune -a -f"
    black: 
        runs-on: [self-hosted, ubuntu, ibm]
        name: "running black"
        needs: [clean]
        steps: 
        -   uses: actions/checkout@v2
        -   name: "Set up Python 3"
            uses: actions/setup-python@v2
            with: 
                python-version: '3.x'
        -   name: "Install dependencies"
            run: "pip install -r requirements_dev.txt"
        -   name: "Run black!"
            run: "black --check ."
    pylint: 
        runs-on: [self-hosted, ubuntu, ibm]
        name: "running pylint"
        needs: [clean]
        steps: 
        -   uses: actions/checkout@v2
        -   name: "Set up Python 3"
            uses: actions/setup-python@v2
            with: 
                python-version: '3.x'
        -   name: "Install dependencies"
            run: |
                pip install -r requirements_manager.txt 
                pip install -r requirements_sdk.txt
                pip install -r requirements_dev.txt
        -   name: "Run pylint!"
            run: "pylint manager daeploy"
    flake8: 
        runs-on: [self-hosted, ubuntu, ibm]
        name: "running flake8"
        needs: [clean]
        steps: 
        -   uses: actions/checkout@v2
        -   name: "Set up Python 3"
            uses: actions/setup-python@v2
            with: 
                python-version: '3.x'
        -   name: "Install dependencies"
            run: "pip install -r requirements_dev.txt"
        -   name: "Run flake8!"
            run: "flake8 manager daeploy"
    pytest-base: 
        runs-on: [self-hosted, ubuntu, ibm]
        needs: [black, pylint, flake8]
        strategy:
            matrix:
              python-version: [3.6, 3.7, 3.8, 3.9]
        steps: 
        - name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.TEST_DOCKER_USERNAME }}
            password: ${{ secrets.TEST_DOCKER_PASSWORD }}  
        -   uses: actions/checkout@v2
        -   name: "Set up Python ${{ matrix.python-version }}"
            uses: actions/setup-python@v2
            with: 
                python-version: "${{ matrix.python-version }}"
        -   name: "Install dependencies"
            run: |
                pip install -r requirements_manager.txt 
                pip install -r requirements_sdk.txt
                pip install -r requirements_dev.txt
        -   name: "Install s2i"
            run: |
                wget -c https://github.com/openshift/source-to-image/releases/download/v1.3.0/source-to-image-v1.3.0-eed2850f-linux-amd64.tar.gz -O - | tar -xz
                sudo cp s2i /usr/local/bin
        -   name: "Install Traefik"
            run: |
                wget -c https://github.com/traefik/traefik/releases/download/v2.3.1/traefik_v2.3.1_linux_amd64.tar.gz
                tar -zxvf traefik_v2.3.1_linux_amd64.tar.gz
                sudo cp traefik /usr/local/bin
        -   name: "Running documentation tests with pytest"
            run: "python -m pytest --verbose --doctest-glob='*.rst' docs/"
        -   name: "Running base tests with pytest"
            run: "python -m pytest --verbose tests/manager_test/ tests/sdk_test/"
    pytest-e2e: 
        runs-on: [self-hosted, ubuntu, ibm]
        needs: [black, pylint, flake8, pytest-base]
        steps: 
        -   uses: actions/checkout@v2
        -   name: "Set up Python 3"
            uses: actions/setup-python@v2
            with: 
                python-version: '3.x'
        -   name: "Install dependencies"
            run: |
                pip install -r requirements_manager.txt 
                pip install -r requirements_sdk.txt
                pip install -r requirements_dev.txt
                pip install .
        -   name: "Running E2E tests with pytest"
            run: "python -m pytest --verbose tests/e2e_test/"
